{"version":3,"sources":["core/tools.js","core/gameObjects.js","core/scene.js","App.js","serviceWorker.js","index.js"],"names":["getDiff","x","y","Math","abs","Number","getRandom","max","floor","random","updatePosition","obj","position","maxPosition","images","Score","options","this","scoreData","color","font","label","score","draw","scene","ctx","text","concat","fillStyle","fillText","Object","assign","Sniper","sniperData","w","h","speed","isMoving","sniperLastMouseX","sniperLastMouseY","image","sniper","mouseMoveOffset","stepX","stepY","diffX","tools","diffY","save","translate","rotate","atan2","PI","drawImage","lineGrd","createLinearGradient","addColorStop","fillRect","restore","Step","stepData","r","maxR","style","isStarted","width","cb","beginPath","strokeStyle","lineWidth","arc","closePath","stroke","Explosion","explosionData","explosion","p","ceil","Rocket","rocketData","mx","my","px","py","rocket","checkTargets","monsters","initialLength","length","filter","mon","hit","explosions","hasTarget","push","Monster","monsterData","maxX","maxY","monster","monsterAppearOptions","chosenOption","keys","forEach","key","maxKeyValue","toUpperCase","Scene","elements","_ref","drawSceneSpeed","monsterGenerateInterval","sceneName","settings","code","src","Array","isArray","el","Image","e","console","error","prototype","render","self","rockets","steps","clearRect","canvas","height","rock","i","splice","step","exp","destroy","drawingInterval","monsterInterval","_ctx$canvas","clearInterval","init","document","getElementById","getContext","gameObjects","bind","addEventListener","pageX","target","offsetLeft","pageY","offsetTop","setInterval","originalEvent","which","mouseX","layerX","mouseY","layerY","App","preventDefault","react_default","a","createElement","id","onContextMenu","PureComponent","Boolean","window","location","hostname","match","ReactDOM","src_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d3c2db45.chunk.js","sourcesContent":["const getDiff = (x, y) => {\r\n    return Math.abs(Number(x) - Number(y));\r\n};\r\n\r\nconst getRandom = (max) => {\r\n    return Math.floor(Math.random() * max);\r\n};\r\n\r\n// update sprite positions\r\nconst updatePosition = (obj) => {\r\n    obj.position = obj.position === obj.maxPosition ? 0 : ++obj.position;\r\n};\r\n\r\nexport {\r\n    getDiff,\r\n    getRandom,\r\n    updatePosition,\r\n}","import * as tools from './tools';\r\n\r\nconst images = {};\r\n\r\nconst init = function(elements) {\r\n    if (!(Array.isArray(elements))) {\r\n        elements = [elements];\r\n    }\r\n\r\n    elements.forEach(el => {\r\n        try {\r\n            images[el.code] = new Image();\r\n            images[el.code].src = el.src;\r\n        } catch(e){\r\n            console.error(\"Initialization failed!\");\r\n        }\r\n    });\r\n};\r\n\r\nconst Score = function (options) {\r\n    this.scoreData = {\r\n        color: '#fff',\r\n        font: '30px Arial',\r\n        label: 'Score:',\r\n        score: 0,\r\n        x: 20,\r\n        y: 30,\r\n    };\r\n\r\n    const { scoreData } = this;\r\n\r\n    scoreData.draw = function(scene) {\r\n        const { color, font, label, score, x, y } = scoreData;\r\n        const { ctx } = scene;\r\n        const text = `${label} ${score}`;\r\n\r\n        ctx.fillStyle = color;\r\n        ctx.font = font;\r\n        ctx.fillText(text, x, y);\r\n    };\r\n\r\n    //checking custom options\r\n    Object.assign(scoreData, options);\r\n\r\n    return scoreData;\r\n};\r\n\r\nconst Sniper = function (options) {\r\n    this.sniperData = {\r\n        x\t\t\t\t\t: 400,\r\n        y\t\t\t\t\t: 300,\r\n        w\t\t\t\t\t: 53,\r\n        h\t\t\t\t\t: 63,\r\n        speed\t\t\t\t: 3,\r\n        position\t\t\t: 0,\r\n        maxPosition\t\t\t: 7,\r\n        isMoving\t\t\t: false,\r\n        sniperLastMouseX\t: 0,\r\n        sniperLastMouseY\t: 0,\r\n        image\t\t\t\t: images.sniper,\r\n    };\r\n\r\n    const { sniperData } = this;\r\n\r\n    sniperData.draw = function(scene, mouseMoveOffset) {\r\n        const { ctx } = scene;\r\n        const { h, image, isMoving, sniperLastMouseX, sniperLastMouseY, speed, w, x, y } = sniperData;\r\n\r\n        let stepX = speed;\r\n        let stepY = speed;\r\n\r\n        const diffX = tools.getDiff(sniperLastMouseX, x);\r\n        const diffY = tools.getDiff(sniperLastMouseY, y);\r\n\r\n        if (diffX > diffY) {\r\n            stepY = diffY / diffX * speed;\r\n        } else {\r\n            stepX = diffX / diffY * speed;\r\n        }\r\n\r\n        if (isMoving && (diffX > speed || diffY > speed)) {\r\n            if (sniperLastMouseX > x) {\r\n                sniperData.x += stepX;\r\n            } else if (sniperLastMouseX < x) {\r\n                sniperData.x -= stepX;\r\n            }\r\n\r\n            if (sniperLastMouseY > y) {\r\n                sniperData.y += stepY;\r\n            } else if (sniperLastMouseY < y) {\r\n                sniperData.y -= stepY;\r\n            }\r\n        } else {\r\n            sniperData.isMoving = false;\r\n        }\r\n\r\n        ctx.save();\r\n        ctx.translate(sniperData.x, sniperData.y);\r\n        tools.updatePosition(sniperData);\r\n\r\n        mouseMoveOffset.x && ctx.rotate(\r\n            Math.atan2(mouseMoveOffset.y - sniperData.y, mouseMoveOffset.x - sniperData.x) + Math.PI/2\r\n        );\r\n        ctx.drawImage(image, isMoving ? sniperData.position * w : 0,  0, w, h, -15, 0, w, h);\r\n        ctx.rotate(-Math.PI/2);\r\n\r\n        const lineGrd = ctx.createLinearGradient(0,0,700,0);\r\n        lineGrd.addColorStop(0,\"#8B1516\");\r\n        lineGrd.addColorStop(1,\"#252729\");\r\n        ctx.fillStyle = lineGrd;\r\n        ctx.fillRect(0,-2,1000,1);\r\n        ctx.restore();\r\n    };\r\n\r\n    //checking custom options\r\n    Object.assign(sniperData, options);\r\n\r\n    return sniperData;\r\n};\r\n\r\nconst Step = function (options) {\r\n    this.stepData = {\r\n        x\t\t    : 0,\r\n        y\t\t    : 0,\r\n        r\t\t    : 5,\r\n        maxR\t    : 18,\r\n        speed\t    : 0.6,\r\n        style\t    : '#8B1516',\r\n        isStarted\t: false,\r\n        width\t    : 2,\r\n    };\r\n\r\n    const { stepData } = this;\r\n\r\n    stepData.draw = function(scene, cb) {\r\n        const { ctx } = scene;\r\n        const { isStarted, maxR, r, speed, style, width, x, y } = stepData;\r\n\r\n        ctx.beginPath();\r\n        ctx.strokeStyle = style;\r\n        ctx.lineWidth = width;\r\n\r\n        if (!isStarted) {\r\n            ctx.arc(x, y, r, 0, 2 * Math.PI);\r\n            stepData.isStarted = true;\r\n        } else {\r\n            ctx.arc(x, y, r, 0, 2 * Math.PI);\r\n            stepData.r += speed;\r\n            if (stepData.r > maxR) {\r\n                if (typeof cb == \"function\") cb();\r\n            }\r\n        }\r\n\r\n        ctx.closePath();\r\n        ctx.stroke();\r\n    };\r\n\r\n    //checking custom options\r\n    Object.assign(stepData, options);\r\n\r\n    return stepData;\r\n};\r\n\r\nconst Explosion = function (options) {\r\n    this.explosionData = {\r\n        x\t\t\t: 0,\r\n        y\t\t\t: 0,\r\n        w\t\t\t: 128,\r\n        h\t\t\t: 128,\r\n        position\t: 0,\r\n        image\t\t: images.explosion,\r\n    };\r\n\r\n    const { explosionData } = this;\r\n\r\n    explosionData.draw = function(scene, cb) {\r\n        const { ctx } = scene;\r\n        const { h, image, position, w, x, y } = explosionData;\r\n\r\n        if (position !== 82) {\r\n            const p = Math.ceil(position / 2);\r\n\r\n            ctx.drawImage(image, p * w,  0, w, h, x - 64, y - 64, w, h);\r\n            explosionData.position++;\r\n        } else {\r\n            if (typeof cb == \"function\") cb();\r\n        }\r\n    };\r\n\r\n    //checking custom options\r\n    Object.assign(explosionData, options);\r\n\r\n    return explosionData;\r\n};\r\n\r\nconst Rocket = function (options) {\r\n    this.rocketData = {\r\n        mx\t\t\t: 0,\r\n        my\t\t\t: 0,\r\n        w\t\t\t: 26,\r\n        h\t\t\t: 49,\r\n        px\t\t\t: 0,\r\n        py\t\t\t: 0,\r\n        x\t\t\t: 0,\r\n        y\t\t\t: 0,\r\n        speed\t\t: 16,\r\n        position\t: 0,\r\n        maxPosition\t: 3,\r\n        image\t\t: images.rocket,\r\n    };\r\n\r\n    const { rocketData } = this;\r\n\r\n    rocketData.checkTargets = function(scene) {\r\n        const { x, y } = rocketData;\r\n        const { monsters } = scene;\r\n        const initialLength = monsters.length;\r\n\r\n        scene.monsters = monsters.filter(mon => {\r\n            const diffX = tools.getDiff(mon.x, x);\r\n            const diffY = tools.getDiff(mon.y, y);\r\n\r\n            return !(diffX < 20 && diffY < 20);\r\n        });\r\n\r\n        const hit = initialLength !== scene.monsters.length;\r\n\r\n        if (hit) {\r\n            scene.score.score++;\r\n        }\r\n\r\n        return hit;\r\n    };\r\n\r\n    rocketData.draw = function(scene, cb) {\r\n        const { explosions, ctx } = scene;\r\n        const { checkTargets, h, image, speed, position, px, py, w, x, y } = rocketData;\r\n        const hasTarget = checkTargets(scene);\r\n\r\n        let stepX = speed;\r\n        let stepY = speed;\r\n\r\n        const diffX = tools.getDiff(px, x);\r\n        const diffY = tools.getDiff(py, y);\r\n\r\n        if (diffX > diffY) {\r\n            stepY = diffY / diffX * speed;\r\n        } else {\r\n            stepX = diffX / diffY * speed;\r\n        }\r\n\r\n        if (hasTarget || (diffX < speed && diffY < speed)) {\r\n            explosions.push(new Explosion({\r\n                x: x,\r\n                y: y\r\n            }));\r\n\r\n            if (typeof cb == \"function\") cb();\r\n\r\n            return;\r\n        }\r\n\r\n        if (px > x) {\r\n            rocketData.x += stepX;\r\n        } else if (px < x) {\r\n            rocketData.x -= stepX;\r\n        }\r\n\r\n        if (py > y) {\r\n            rocketData.y += stepY;\r\n        } else if (py < y) {\r\n            rocketData.y -= stepY;\r\n        }\r\n\r\n        ctx.save();\r\n        ctx.translate(rocketData.x, rocketData.y);\r\n        px && ctx.rotate(Math.atan2(py - rocketData.y, px - rocketData.x) + Math.PI/2);\r\n        tools.updatePosition(rocketData);\r\n        ctx.drawImage(image, position * w,  0, w, h, -12, -31, w, h);\r\n        ctx.restore();\r\n    };\r\n\r\n    //checking custom options\r\n    Object.assign(rocketData, options);\r\n\r\n    return rocketData;\r\n};\r\n\r\nconst Monster = function (options) {\r\n    this.monsterData = {\r\n        mx:                     0,\r\n        my:                     0,\r\n        w:                      42,\r\n        h:                      31,\r\n        px:                     0,\r\n        py:                     0,\r\n        speed:                  1,\r\n        position:               0,\r\n        maxPosition:            0,\r\n        maxX:                   options.maxX,\r\n        maxY:                   options.maxY,\r\n        image:                  images.monster,\r\n        monsterAppearOptions: [\r\n            { x: 'random',  y: 0 },\r\n            { x: 'max',     y: 'random' },\r\n            { x: 'random',  y: 'max' },\r\n            { x: 0,         y: 'random' }\r\n        ],\r\n    };\r\n\r\n    const { monsterData } = this;\r\n    const sides = monsterData.monsterAppearOptions;\r\n    const randomSide = tools.getRandom(4);\r\n    const chosenOption = sides[randomSide];\r\n\r\n    Object.keys(chosenOption).forEach(key => {\r\n        const maxKeyValue = monsterData[`max${key.toUpperCase()}`];\r\n\r\n        switch (chosenOption[key]) {\r\n            case 'random':\r\n                monsterData[key] = tools.getRandom(maxKeyValue);\r\n                break;\r\n\r\n            case 'max':\r\n                monsterData[key] = maxKeyValue;\r\n                break;\r\n\r\n            default:\r\n                monsterData[key] = chosenOption[key];\r\n        }\r\n    });\r\n\r\n    monsterData.draw = function(scene, cb) {\r\n        const { ctx } = scene;\r\n        const { h, image, speed, position, px, py, w, x, y } = monsterData;\r\n\r\n        let stepX = speed;\r\n        let stepY = speed;\r\n\r\n        const diffX = tools.getDiff(px, x);\r\n        const diffY = tools.getDiff(py, y);\r\n\r\n        if (diffX > diffY) {\r\n            stepY = diffY / diffX * speed;\r\n        } else {\r\n            stepX = diffX / diffY * speed;\r\n        }\r\n\r\n        if (diffX < speed && diffY < speed) {\r\n            if (typeof cb == \"function\") cb();\r\n\r\n            return;\r\n        }\r\n\r\n        if (px > x) {\r\n            monsterData.x += stepX;\r\n        } else if (px < x) {\r\n            monsterData.x -= stepX;\r\n        }\r\n\r\n        if (py > y) {\r\n            monsterData.y += stepY;\r\n        } else if (py < y) {\r\n            monsterData.y -= stepY;\r\n        }\r\n\r\n        ctx.save();\r\n        ctx.translate(monsterData.x, monsterData.y);\r\n        px && ctx.rotate(Math.atan2(py - monsterData.y, px - monsterData.x) + Math.PI/2);\r\n        tools.updatePosition(monsterData);\r\n        ctx.drawImage(image, position * w,  0, w, h, -12, -31, w, h);\r\n        ctx.restore();\r\n    };\r\n\r\n    //checking custom options\r\n    Object.assign(monsterData, options);\r\n\r\n    return monsterData;\r\n};\r\n\r\nexport {\r\n    Explosion,\r\n    init,\r\n    Monster,\r\n    Rocket,\r\n    Score,\r\n    Sniper,\r\n    Step,\r\n}","import * as gameObjects from './gameObjects';\r\n\r\nconst Scene = function (options) {\r\n    const { drawSceneSpeed, monsterGenerateInterval, sceneName, } = options || {};\r\n\r\n    this.sceneName = sceneName || 'scene';\r\n    this.settings = {\r\n        drawSceneSpeed: drawSceneSpeed || 16.66666666,\r\n        monsterGenerateInterval: monsterGenerateInterval || 2000,\r\n    };\r\n\r\n\r\n    gameObjects.init([\r\n        { code: \"explosion\", src:  \"images/explosion.png\"},\r\n        { code: \"monster\", src:  \"images/monster.png\"},\r\n        { code: \"rocket\", src:  \"images/rocket.png\"},\r\n        { code: \"sniper\", src:  \"images/sniper.png\"},\r\n    ]);\r\n};\r\n\r\nScene.prototype.render = function () {\r\n    const self = this;\r\n    const { ctx, explosions, monsters, mouseMoveOffset, rockets, score, sniper, steps, } = this;\r\n\r\n    ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height); // clear canvas\r\n\r\n    score.draw(self);\r\n    sniper.draw(self, mouseMoveOffset);\r\n\r\n    // draw rockets\r\n    rockets.forEach((rock, i) => {\r\n        rock.draw(self, () => {\r\n            rockets.splice(i, 1);\r\n        });\r\n    });\r\n\r\n    // draw steps\r\n    steps.forEach((step, i) => {\r\n        step.draw(self, () => {\r\n            steps.splice(i, 1);\r\n        });\r\n    });\r\n\r\n    // draw explosions\r\n    explosions.forEach((exp, i) => {\r\n        exp.draw(self, () => {\r\n            explosions.splice(i, 1);\r\n        });\r\n    });\r\n\r\n    // draw monsters\r\n    monsters.forEach((mon, i) => {\r\n        mon.draw(self, () => {\r\n            monsters.splice(i, 1);\r\n        });\r\n    });\r\n};\r\n\r\nScene.prototype.destroy = function() {\r\n    const { ctx, drawingInterval, monsterInterval } = this;\r\n    const { height, width } = ctx.canvas;\r\n\r\n    ctx.clearRect(0, 0, width, height);\r\n    clearInterval(monsterInterval);\r\n    clearInterval(drawingInterval);\r\n};\r\n\r\nScene.prototype.init = function(width, height) {\r\n    const self = this;\r\n    this.canvas = document.getElementById(this.sceneName);\r\n    this.ctx = this.canvas.getContext('2d');\r\n\r\n    this.explosions = [];\r\n    this.monsters = [];\r\n    this.rockets = [];\r\n    this.steps = [];\r\n    this.score = new gameObjects.Score();\r\n    this.sniper = new gameObjects.Sniper();\r\n\r\n    this.mouseMoveOffset = { x: 0, y: 0};\r\n\r\n    const { canvas, mouseMoveOffset, rockets, settings, sniper, steps } = this;\r\n\r\n    this.render = this.render.bind(this);\r\n\r\n    canvas.addEventListener('mousemove', (e) => {\r\n        mouseMoveOffset.x = e.pageX - e.target.offsetLeft;\r\n        mouseMoveOffset.y =\te.pageY - e.target.offsetTop;\r\n    });\r\n\r\n    this.drawingInterval = setInterval(() => {\r\n\r\n        //draw the scene\r\n        self.render();\r\n    }, settings.drawSceneSpeed);\r\n\r\n    this.monsterInterval = setInterval(() => {\r\n        self.monsters.push(new gameObjects.Monster({\r\n            px:     sniper.x,\r\n            py:     sniper.y,\r\n            mx:     mouseMoveOffset.x,\r\n            my:     mouseMoveOffset.y,\r\n            maxX:   width,\r\n            maxY:   height,\r\n        }));\r\n    }, settings.monsterGenerateInterval);\r\n\r\n    canvas.addEventListener('mousedown', (e) => {\r\n        const { originalEvent, which } = e;\r\n\r\n        let mouseX = e.layerX || 0;\r\n        let mouseY = e.layerY || 0;\r\n\r\n        if (originalEvent && originalEvent.layerX) {\r\n            mouseX = originalEvent.layerX;\r\n            mouseY = originalEvent.layerY;\r\n        }\r\n\r\n        switch (which) {\r\n            case 1: // left button\r\n\r\n                rockets.push(new gameObjects.Rocket({\r\n                    mx \t\t: mouseMoveOffset.x,\r\n                    my  \t: mouseMoveOffset.y,\r\n                    px \t\t: mouseX,\r\n                    py\t\t: mouseY,\r\n                    x\t\t: sniper.x,\r\n                    y\t\t: sniper.y\r\n                }));\r\n\r\n                break;\r\n\r\n            case 3: // right button\r\n\r\n                // saving last coordinates and move the sniper\r\n                sniper.sniperLastMouseX = mouseX;\r\n                sniper.sniperLastMouseY = mouseY;\r\n                sniper.isMoving = true;\r\n\r\n                //add a step\r\n                steps.push(new gameObjects.Step({\r\n                    x: mouseX,\r\n                    y: mouseY\r\n                }));\r\n\r\n                break;\r\n        }\r\n    });\r\n};\r\n\r\nexport default Scene;","import React, { PureComponent } from 'react';\n\nimport Scene from './core/scene';\n\nconst width = 1000;\nconst height = 600;\n\nclass App extends PureComponent {\n  componentDidMount() {\n    (new Scene()).init(width, height);\n  }\n\n  onContextMenu(e) {\n    e.preventDefault();\n    return false;\n  }\n\n  render() {\n    return (\n        <canvas id=\"scene\" width={width} height={height} onContextMenu={this.onContextMenu}></canvas>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}