{"version":3,"sources":["core/tools.js","core/gameObjects.js","core/scene.js","App.js","serviceWorker.js","index.js"],"names":["getDiff","x","y","Math","abs","Number","getRandom","max","floor","random","updatePosition","obj","position","maxPosition","images","Sniper","options","this","sniperData","w","h","speed","isMoving","sniperLastMouseX","sniperLastMouseY","image","sniper","draw","scene","mouseMoveOffset","ctx","stepX","stepY","diffX","tools","diffY","save","translate","rotate","atan2","PI","drawImage","lineGrd","createLinearGradient","addColorStop","fillStyle","fillRect","restore","Object","assign","Step","stepData","r","maxR","style","isStarted","width","cb","beginPath","strokeStyle","lineWidth","arc","closePath","stroke","Explosion","explosionData","explosion","p","ceil","Rocket","rocketData","mx","my","px","py","rocket","checkTargets","monsters","initialLength","length","filter","mon","explosions","hasTarget","push","Monster","monsterData","maxX","maxY","monster","monsterAppearOptions","chosenOption","keys","forEach","key","maxKeyValue","concat","toUpperCase","Scene","elements","_ref","drawSceneSpeed","monsterGenerateInterval","sceneName","settings","code","src","Array","isArray","el","Image","e","console","error","prototype","render","self","rockets","steps","clearRect","canvas","height","rock","i","splice","step","exp","destroy","drawingInterval","monsterInterval","_ctx$canvas","clearInterval","init","document","getElementById","getContext","gameObjects","bind","addEventListener","pageX","target","offsetLeft","pageY","offsetTop","setInterval","originalEvent","which","mouseX","layerX","mouseY","layerY","App","preventDefault","react_default","a","createElement","id","onContextMenu","PureComponent","Boolean","window","location","hostname","match","ReactDOM","src_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.235d521a.chunk.js","sourcesContent":["const getDiff = (x, y) => {\r\n    return Math.abs(Number(x) - Number(y));\r\n};\r\n\r\nconst getRandom = (max) => {\r\n    return Math.floor(Math.random() * max);\r\n};\r\n\r\n// update sprite positions\r\nconst updatePosition = (obj) => {\r\n    obj.position = obj.position === obj.maxPosition ? 0 : ++obj.position;\r\n};\r\n\r\nexport {\r\n    getDiff,\r\n    getRandom,\r\n    updatePosition,\r\n}","import * as tools from './tools';\r\n\r\nconst images = {};\r\n\r\nconst init = function(elements) {\r\n    if (!(Array.isArray(elements))) {\r\n        elements = [elements];\r\n    }\r\n\r\n    elements.forEach(el => {\r\n        try {\r\n            images[el.code] = new Image();\r\n            images[el.code].src = el.src;\r\n        } catch(e){\r\n            console.error(\"Initialization failed!\");\r\n        }\r\n    });\r\n};\r\n\r\nconst Sniper = function (options) {\r\n    this.sniperData = {\r\n        x\t\t\t\t\t: 400,\r\n        y\t\t\t\t\t: 300,\r\n        w\t\t\t\t\t: 53,\r\n        h\t\t\t\t\t: 63,\r\n        speed\t\t\t\t: 3,\r\n        position\t\t\t: 0,\r\n        maxPosition\t\t\t: 7,\r\n        isMoving\t\t\t: false,\r\n        sniperLastMouseX\t: 0,\r\n        sniperLastMouseY\t: 0,\r\n        image\t\t\t\t: images.sniper,\r\n    };\r\n\r\n    const { sniperData } = this;\r\n\r\n    sniperData.draw = function(scene, mouseMoveOffset) {\r\n        const { ctx } = scene;\r\n        const { h, image, isMoving, sniperLastMouseX, sniperLastMouseY, speed, w, x, y } = sniperData;\r\n\r\n        let stepX = speed;\r\n        let stepY = speed;\r\n\r\n        const diffX = tools.getDiff(sniperLastMouseX, x);\r\n        const diffY = tools.getDiff(sniperLastMouseY, y);\r\n\r\n        if (diffX > diffY) {\r\n            stepY = diffY / diffX * speed;\r\n        } else {\r\n            stepX = diffX / diffY * speed;\r\n        }\r\n\r\n        if (isMoving && (diffX > speed || diffY > speed)) {\r\n            if (sniperLastMouseX > x) {\r\n                sniperData.x += stepX;\r\n            } else if (sniperLastMouseX < x) {\r\n                sniperData.x -= stepX;\r\n            }\r\n\r\n            if (sniperLastMouseY > y) {\r\n                sniperData.y += stepY;\r\n            } else if (sniperLastMouseY < y) {\r\n                sniperData.y -= stepY;\r\n            }\r\n        } else {\r\n            sniperData.isMoving = false;\r\n        }\r\n\r\n        ctx.save();\r\n        ctx.translate(sniperData.x, sniperData.y);\r\n        tools.updatePosition(sniperData);\r\n\r\n        mouseMoveOffset.x && ctx.rotate(\r\n            Math.atan2(mouseMoveOffset.y - sniperData.y, mouseMoveOffset.x - sniperData.x) + Math.PI/2\r\n        );\r\n        ctx.drawImage(image, isMoving ? sniperData.position * w : 0,  0, w, h, -15, 0, w, h);\r\n        ctx.rotate(-Math.PI/2);\r\n\r\n        const lineGrd = ctx.createLinearGradient(0,0,700,0);\r\n        lineGrd.addColorStop(0,\"#8B1516\");\r\n        lineGrd.addColorStop(1,\"#252729\");\r\n        ctx.fillStyle = lineGrd;\r\n        ctx.fillRect(0,-2,1000,1);\r\n        ctx.restore();\r\n    };\r\n\r\n    //checking custom options\r\n    Object.assign(sniperData, options);\r\n\r\n    return sniperData;\r\n};\r\n\r\nconst Step = function (options) {\r\n    this.stepData = {\r\n        x\t\t    : 0,\r\n        y\t\t    : 0,\r\n        r\t\t    : 5,\r\n        maxR\t    : 18,\r\n        speed\t    : 0.6,\r\n        style\t    : \"#8B1516\",\r\n        isStarted\t: false,\r\n        width\t    : 2,\r\n    };\r\n\r\n    const { stepData } = this;\r\n\r\n    stepData.draw = function(scene, cb) {\r\n        const { ctx } = scene;\r\n        const { isStarted, maxR, r, speed, style, width, x, y } = stepData;\r\n\r\n        ctx.beginPath();\r\n        ctx.strokeStyle = style;\r\n        ctx.lineWidth = width;\r\n\r\n        if (!isStarted) {\r\n            ctx.arc(x, y, r, 0, 2 * Math.PI);\r\n            stepData.isStarted = true;\r\n        } else {\r\n            ctx.arc(x, y, r, 0, 2 * Math.PI);\r\n            stepData.r += speed;\r\n            if (stepData.r > maxR) {\r\n                if (typeof cb == \"function\") cb();\r\n            }\r\n        }\r\n\r\n        ctx.closePath();\r\n        ctx.stroke();\r\n    };\r\n\r\n    //checking custom options\r\n    Object.assign(stepData, options);\r\n\r\n    return stepData;\r\n};\r\n\r\nconst Explosion = function (options) {\r\n    this.explosionData = {\r\n        x\t\t\t: 0,\r\n        y\t\t\t: 0,\r\n        w\t\t\t: 128,\r\n        h\t\t\t: 128,\r\n        position\t: 0,\r\n        image\t\t: images.explosion,\r\n    };\r\n\r\n    const { explosionData } = this;\r\n\r\n    explosionData.draw = function(scene, cb) {\r\n        const { ctx } = scene;\r\n        const { h, image, position, w, x, y } = explosionData;\r\n\r\n        if (position !== 82) {\r\n            const p = Math.ceil(position / 2);\r\n\r\n            ctx.drawImage(image, p * w,  0, w, h, x - 64, y - 64, w, h);\r\n            explosionData.position++;\r\n        } else {\r\n            if (typeof cb == \"function\") cb();\r\n        }\r\n    };\r\n\r\n    //checking custom options\r\n    Object.assign(explosionData, options);\r\n\r\n    return explosionData;\r\n};\r\n\r\nconst Rocket = function (options) {\r\n    this.rocketData = {\r\n        mx\t\t\t: 0,\r\n        my\t\t\t: 0,\r\n        w\t\t\t: 26,\r\n        h\t\t\t: 49,\r\n        px\t\t\t: 0,\r\n        py\t\t\t: 0,\r\n        x\t\t\t: 0,\r\n        y\t\t\t: 0,\r\n        speed\t\t: 16,\r\n        position\t: 0,\r\n        maxPosition\t: 3,\r\n        image\t\t: images.rocket,\r\n    };\r\n\r\n    const { rocketData } = this;\r\n\r\n    rocketData.checkTargets = function(scene) {\r\n        const { x, y } = rocketData;\r\n        const { monsters } = scene;\r\n        const initialLength = monsters.length;\r\n\r\n        scene.monsters = monsters.filter(mon => {\r\n            const diffX = tools.getDiff(mon.x, x);\r\n            const diffY = tools.getDiff(mon.y, y);\r\n\r\n            return !(diffX < 20 && diffY < 20);\r\n\r\n\r\n        });\r\n\r\n        return initialLength !== scene.monsters.length;\r\n    };\r\n\r\n    rocketData.draw = function(scene, cb) {\r\n        const { explosions, ctx } = scene;\r\n        const { checkTargets, h, image, speed, position, px, py, w, x, y } = rocketData;\r\n        const hasTarget = checkTargets(scene);\r\n\r\n        let stepX = speed;\r\n        let stepY = speed;\r\n\r\n        const diffX = tools.getDiff(px, x);\r\n        const diffY = tools.getDiff(py, y);\r\n\r\n        if (diffX > diffY) {\r\n            stepY = diffY / diffX * speed;\r\n        } else {\r\n            stepX = diffX / diffY * speed;\r\n        }\r\n\r\n        if (hasTarget || (diffX < speed && diffY < speed)) {\r\n            explosions.push(new Explosion({\r\n                x: x,\r\n                y: y\r\n            }));\r\n\r\n            if (typeof cb == \"function\") cb();\r\n\r\n            return;\r\n        }\r\n\r\n        if (px > x) {\r\n            rocketData.x += stepX;\r\n        } else if (px < x) {\r\n            rocketData.x -= stepX;\r\n        }\r\n\r\n        if (py > y) {\r\n            rocketData.y += stepY;\r\n        } else if (py < y) {\r\n            rocketData.y -= stepY;\r\n        }\r\n\r\n        ctx.save();\r\n        ctx.translate(rocketData.x, rocketData.y);\r\n        px && ctx.rotate(Math.atan2(py - rocketData.y, px - rocketData.x) + Math.PI/2);\r\n        tools.updatePosition(rocketData);\r\n        ctx.drawImage(image, position * w,  0, w, h, -12, -31, w, h);\r\n        ctx.restore();\r\n    };\r\n\r\n    //checking custom options\r\n    Object.assign(rocketData, options);\r\n\r\n    return rocketData;\r\n};\r\n\r\nconst Monster = function (options) {\r\n    this.monsterData = {\r\n        mx:                     0,\r\n        my:                     0,\r\n        w:                      42,\r\n        h:                      31,\r\n        px:                     0,\r\n        py:                     0,\r\n        speed:                  1,\r\n        position:               0,\r\n        maxPosition:            0,\r\n        maxX:                   options.maxX,\r\n        maxY:                   options.maxY,\r\n        image:                  images.monster,\r\n        monsterAppearOptions: [\r\n            { x: 'random',  y: 0 },\r\n            { x: 'max',     y: 'random' },\r\n            { x: 'random',  y: 'max' },\r\n            { x: 0,         y: 'random' }\r\n        ],\r\n    };\r\n\r\n    const { monsterData } = this;\r\n    const sides = monsterData.monsterAppearOptions;\r\n    const randomSide = tools.getRandom(4);\r\n    const chosenOption = sides[randomSide];\r\n\r\n    Object.keys(chosenOption).forEach(key => {\r\n        const maxKeyValue = monsterData[`max${key.toUpperCase()}`];\r\n\r\n        switch (chosenOption[key]) {\r\n            case 'random':\r\n                monsterData[key] = tools.getRandom(maxKeyValue);\r\n                break;\r\n\r\n            case 'max':\r\n                monsterData[key] = maxKeyValue;\r\n                break;\r\n\r\n            default:\r\n                monsterData[key] = chosenOption[key];\r\n        }\r\n    });\r\n\r\n    monsterData.draw = function(scene, cb) {\r\n        const { ctx } = scene;\r\n        const { h, image, speed, position, px, py, w, x, y } = monsterData;\r\n\r\n        let stepX = speed;\r\n        let stepY = speed;\r\n\r\n        const diffX = tools.getDiff(px, x);\r\n        const diffY = tools.getDiff(py, y);\r\n\r\n        if (diffX > diffY) {\r\n            stepY = diffY / diffX * speed;\r\n        } else {\r\n            stepX = diffX / diffY * speed;\r\n        }\r\n\r\n        if (diffX < speed && diffY < speed) {\r\n            if (typeof cb == \"function\") cb();\r\n\r\n            return;\r\n        }\r\n\r\n        if (px > x) {\r\n            monsterData.x += stepX;\r\n        } else if (px < x) {\r\n            monsterData.x -= stepX;\r\n        }\r\n\r\n        if (py > y) {\r\n            monsterData.y += stepY;\r\n        } else if (py < y) {\r\n            monsterData.y -= stepY;\r\n        }\r\n\r\n        ctx.save();\r\n        ctx.translate(monsterData.x, monsterData.y);\r\n        px && ctx.rotate(Math.atan2(py - monsterData.y, px - monsterData.x) + Math.PI/2);\r\n        tools.updatePosition(monsterData);\r\n        ctx.drawImage(image, position * w,  0, w, h, -12, -31, w, h);\r\n        ctx.restore();\r\n    };\r\n\r\n    //checking custom options\r\n    Object.assign(monsterData, options);\r\n\r\n    return monsterData;\r\n};\r\n\r\nexport {\r\n    Explosion,\r\n    init,\r\n    Monster,\r\n    Rocket,\r\n    Sniper,\r\n    Step,\r\n}","import * as gameObjects from './gameObjects';\r\n\r\nconst Scene = function (options) {\r\n    const { drawSceneSpeed, monsterGenerateInterval, sceneName, } = options || {};\r\n\r\n    this.sceneName = sceneName || 'scene';\r\n    this.settings = {\r\n        drawSceneSpeed: drawSceneSpeed || 16.66666666,\r\n        monsterGenerateInterval: monsterGenerateInterval || 2000,\r\n    };\r\n\r\n\r\n    gameObjects.init([\r\n        { code: \"explosion\", src:  \"images/explosion.png\"},\r\n        { code: \"monster\", src:  \"images/monster.png\"},\r\n        { code: \"rocket\", src:  \"images/rocket.png\"},\r\n        { code: \"sniper\", src:  \"images/sniper.png\"},\r\n    ]);\r\n};\r\n\r\nScene.prototype.render = function () {\r\n    const self = this;\r\n    const { ctx, explosions, monsters, mouseMoveOffset, rockets, sniper, steps, } = this;\r\n\r\n    ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height); // clear canvas\r\n\r\n    sniper.draw(self, mouseMoveOffset);\r\n\r\n    // draw rockets\r\n    rockets.forEach((rock, i) => {\r\n        rock.draw(self, () => {\r\n            rockets.splice(i, 1);\r\n        });\r\n    });\r\n\r\n    // draw steps\r\n    steps.forEach((step, i) => {\r\n        step.draw(self, () => {\r\n            steps.splice(i, 1);\r\n        });\r\n    });\r\n\r\n    // draw explosions\r\n    explosions.forEach((exp, i) => {\r\n        exp.draw(self, () => {\r\n            explosions.splice(i, 1);\r\n        });\r\n    });\r\n\r\n    // draw monsters\r\n    monsters.forEach((mon, i) => {\r\n        mon.draw(self, () => {\r\n            monsters.splice(i, 1);\r\n        });\r\n    });\r\n};\r\n\r\nScene.prototype.destroy = function() {\r\n    const { ctx, drawingInterval, monsterInterval } = this;\r\n    const { height, width } = ctx.canvas;\r\n\r\n    ctx.clearRect(0, 0, width, height);\r\n    clearInterval(monsterInterval);\r\n    clearInterval(drawingInterval);\r\n};\r\n\r\nScene.prototype.init = function(width, height) {\r\n    const self = this;\r\n    this.canvas = document.getElementById(this.sceneName);\r\n    this.ctx = this.canvas.getContext('2d');\r\n\r\n    this.explosions = [];\r\n    this.monsters = [];\r\n    this.rockets = [];\r\n    this.steps = [];\r\n    this.sniper = new gameObjects.Sniper();\r\n\r\n    this.mouseMoveOffset = { x: 0, y: 0};\r\n\r\n    const { canvas, mouseMoveOffset, rockets, settings, sniper, steps } = this;\r\n\r\n    this.render = this.render.bind(this);\r\n\r\n    canvas.addEventListener('mousemove', (e) => {\r\n        mouseMoveOffset.x = e.pageX - e.target.offsetLeft;\r\n        mouseMoveOffset.y =\te.pageY - e.target.offsetTop;\r\n    });\r\n\r\n    this.drawingInterval = setInterval(() => {\r\n\r\n        //draw the scene\r\n        self.render();\r\n    }, settings.drawSceneSpeed);\r\n\r\n    this.monsterInterval = setInterval(() => {\r\n        self.monsters.push(new gameObjects.Monster({\r\n            px:     sniper.x,\r\n            py:     sniper.y,\r\n            mx:     mouseMoveOffset.x,\r\n            my:     mouseMoveOffset.y,\r\n            maxX:   width,\r\n            maxY:   height,\r\n        }));\r\n    }, settings.monsterGenerateInterval);\r\n\r\n    canvas.addEventListener('mousedown', (e) => {\r\n        const { originalEvent, which } = e;\r\n\r\n        let mouseX = e.layerX || 0;\r\n        let mouseY = e.layerY || 0;\r\n\r\n        if (originalEvent && originalEvent.layerX) {\r\n            mouseX = originalEvent.layerX;\r\n            mouseY = originalEvent.layerY;\r\n        }\r\n\r\n        switch (which) {\r\n            case 1: // left button\r\n\r\n                rockets.push(new gameObjects.Rocket({\r\n                    mx \t\t: mouseMoveOffset.x,\r\n                    my  \t: mouseMoveOffset.y,\r\n                    px \t\t: mouseX,\r\n                    py\t\t: mouseY,\r\n                    x\t\t: sniper.x,\r\n                    y\t\t: sniper.y\r\n                }));\r\n\r\n                break;\r\n\r\n            case 3: // right button\r\n\r\n                // saving last coordinates and move the sniper\r\n                sniper.sniperLastMouseX = mouseX;\r\n                sniper.sniperLastMouseY = mouseY;\r\n                sniper.isMoving = true;\r\n\r\n                //add a step\r\n                steps.push(new gameObjects.Step({\r\n                    x: mouseX,\r\n                    y: mouseY\r\n                }));\r\n\r\n                break;\r\n        }\r\n    });\r\n};\r\n\r\nexport default Scene;","import React, { PureComponent } from 'react';\n\nimport Scene from './core/scene';\n\nconst width = 1000;\nconst height = 600;\n\nclass App extends PureComponent {\n  componentDidMount() {\n    (new Scene()).init(width, height);\n  }\n\n  onContextMenu(e) {\n    e.preventDefault();\n    return false;\n  }\n\n  render() {\n    return (\n        <canvas id=\"scene\" width={width} height={height} onContextMenu={this.onContextMenu}></canvas>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}