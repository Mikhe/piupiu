{"version":3,"sources":["core/tools.js","core/gameObjects.js","core/scene.js","App.js","serviceWorker.js","index.js"],"names":["getDiff","x","y","Math","abs","Number","getRandom","max","floor","random","updatePosition","obj","position","maxPosition","images","Level","options","this","levelData","color","font","label","level","draw","scene","ctx","text","concat","fillStyle","fillText","Object","assign","GameOver","gameData","Life","lifeData","colors","baseColor","dangerColor","fullColor","middleColor","life","r","speed","width","cb","currentColor","sniper","beginPath","lineWidth","strokeStyle","arc","PI","closePath","stroke","Score","scoreData","score","Sniper","sniperData","w","h","isMoving","sniperLastMouseX","sniperLastMouseY","image","mouseMoveOffset","stepX","stepY","diffX","tools","diffY","save","translate","rotate","atan2","drawImage","lineGrd","createLinearGradient","addColorStop","fillRect","restore","Step","stepData","maxR","style","isStarted","Explosion","explosionData","explosion","p","ceil","Rocket","rocketData","mx","my","px","py","rocket","checkTargets","monsters","initialLength","length","filter","mon","hit","settings","levelUp","monsterSpeed","explosions","hasTarget","push","Monster","monsterData","maxX","maxY","monster","monsterAppearOptions","chosenOption","keys","forEach","key","maxKeyValue","toUpperCase","checkHit","minDiff","Scene","elements","_ref","drawSceneSpeed","monsterGenerateInterval","sceneName","code","src","Array","isArray","el","Image","e","console","error","prototype","getMonsterSpeed","render","self","rockets","steps","clearRect","canvas","height","destroy","rock","i","splice","step","exp","_this","drawingInterval","gameover","monsterInterval","_ctx$canvas","clearInterval","setTimeout","init","document","getElementById","getContext","gameObjects","bind","addEventListener","pageX","target","offsetLeft","pageY","offsetTop","setInterval","which","mouseX","offsetX","mouseY","offsetY","App","preventDefault","react_default","a","createElement","id","onContextMenu","PureComponent","Boolean","window","location","hostname","match","ReactDOM","src_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b5e04af4.chunk.js","sourcesContent":["const getDiff = (x, y) => {\r\n    return Math.abs(Number(x) - Number(y));\r\n};\r\n\r\nconst getRandom = (max) => {\r\n    return Math.floor(Math.random() * max);\r\n};\r\n\r\nconst updatePosition = (obj) => {\r\n    obj.position = obj.position === obj.maxPosition ? 0 : ++obj.position;\r\n};\r\n\r\nexport {\r\n    getDiff,\r\n    getRandom,\r\n    updatePosition,\r\n}","import * as tools from './tools';\r\n\r\nconst images = {};\r\n\r\nconst init = function(elements) {\r\n    if (!(Array.isArray(elements))) {\r\n        elements = [elements];\r\n    }\r\n\r\n    elements.forEach(el => {\r\n        try {\r\n            images[el.code] = new Image();\r\n            images[el.code].src = el.src;\r\n        } catch(e){\r\n            console.error(\"Initialization failed!\");\r\n        }\r\n    });\r\n};\r\n\r\nconst Level = function (options) {\r\n    this.levelData = {\r\n        color: '#fff',\r\n        font: '30px Arial',\r\n        label: 'Level:',\r\n        level: 1,\r\n        x: 850,\r\n        y: 30,\r\n    };\r\n\r\n    const { levelData } = this;\r\n\r\n    levelData.draw = function(scene) {\r\n        const { color, font, label, level, x, y } = levelData;\r\n        const { ctx } = scene;\r\n        const text = `${label} ${level}`;\r\n\r\n        ctx.fillStyle = color;\r\n        ctx.font = font;\r\n        ctx.fillText(text, x, y);\r\n    };\r\n\r\n    Object.assign(levelData, options);\r\n\r\n    return levelData;\r\n};\r\n\r\nconst GameOver = function (options) {\r\n    this.gameData = {\r\n        color: '#fff',\r\n        font: '45px Arial',\r\n        label: 'Game Over',\r\n        x: 385,\r\n        y: 300,\r\n    };\r\n\r\n    const { gameData } = this;\r\n\r\n    gameData.draw = function(scene) {\r\n        const { color, font, label, x, y } = gameData;\r\n        const { ctx } = scene;\r\n\r\n        ctx.fillStyle = color;\r\n        ctx.font = font;\r\n        ctx.fillText(label, x, y);\r\n    };\r\n\r\n    Object.assign(gameData, options);\r\n\r\n    return gameData;\r\n};\r\n\r\nconst Life = function (options) {\r\n    this.lifeData = {\r\n        colors: {\r\n            baseColor: '#DCDCDC',\r\n            dangerColor: '#FF0000',\r\n            fullColor: '#00FF00',\r\n            middleColor: '#FFFF00',\r\n        },\r\n        life        : 100,\r\n        r\t\t    : 65,\r\n        speed       : 10,\r\n        width\t    : 5,\r\n    };\r\n\r\n    const { lifeData } = this;\r\n\r\n    lifeData.draw = function(scene, cb) {\r\n        const { ctx, sniper } = scene;\r\n        const { x, y } = sniper;\r\n        const { life, r, colors, width, } = lifeData;\r\n        let currentColor;\r\n\r\n        if (life <= 30) {\r\n            currentColor = colors.dangerColor;\r\n        } else if (life <= 70) {\r\n            currentColor = colors.middleColor;\r\n        } else {\r\n            currentColor = colors.fullColor;\r\n        }\r\n\r\n        //base\r\n        ctx.beginPath();\r\n        ctx.lineWidth = width;\r\n        ctx.strokeStyle = currentColor;\r\n        ctx.arc(x, y, r, Math.PI/180 * -90, Math.PI/180 * 270, true);\r\n        ctx.closePath();\r\n        ctx.stroke();\r\n\r\n        //current level\r\n        ctx.beginPath();\r\n        ctx.lineWidth = width;\r\n        ctx.strokeStyle = colors.baseColor;\r\n        ctx.arc(x, y, r, Math.PI/180 * -90, Math.PI/180 * ((100 - life) * 3.6 - 90));\r\n        ctx.stroke();\r\n        ctx.closePath();\r\n\r\n        if (lifeData.life <= 0) {\r\n            if (typeof cb == \"function\") cb();\r\n        }\r\n    };\r\n\r\n    Object.assign(lifeData, options);\r\n\r\n    return lifeData;\r\n};\r\n\r\nconst Score = function (options) {\r\n    this.scoreData = {\r\n        color: '#fff',\r\n        font: '30px Arial',\r\n        label: 'Score:',\r\n        score: 0,\r\n        x: 20,\r\n        y: 30,\r\n    };\r\n\r\n    const { scoreData } = this;\r\n\r\n    scoreData.draw = function(scene) {\r\n        const { color, font, label, score, x, y } = scoreData;\r\n        const { ctx } = scene;\r\n        const text = `${label} ${score}`;\r\n\r\n        ctx.fillStyle = color;\r\n        ctx.font = font;\r\n        ctx.fillText(text, x, y);\r\n    };\r\n\r\n    Object.assign(scoreData, options);\r\n\r\n    return scoreData;\r\n};\r\n\r\nconst Sniper = function (options) {\r\n    this.sniperData = {\r\n        x\t\t\t\t\t: 400,\r\n        y\t\t\t\t\t: 300,\r\n        w\t\t\t\t\t: 53,\r\n        h\t\t\t\t\t: 63,\r\n        speed\t\t\t\t: 3,\r\n        position\t\t\t: 0,\r\n        maxPosition\t\t\t: 7,\r\n        isMoving\t\t\t: false,\r\n        sniperLastMouseX\t: 0,\r\n        sniperLastMouseY\t: 0,\r\n        image\t\t\t\t: images.sniper,\r\n    };\r\n\r\n    const { sniperData } = this;\r\n\r\n    sniperData.draw = function(scene, mouseMoveOffset) {\r\n        const { ctx } = scene;\r\n        const { h, image, isMoving, sniperLastMouseX, sniperLastMouseY, speed, w, x, y } = sniperData;\r\n\r\n        let stepX = speed;\r\n        let stepY = speed;\r\n\r\n        const diffX = tools.getDiff(sniperLastMouseX, x);\r\n        const diffY = tools.getDiff(sniperLastMouseY, y);\r\n\r\n        if (diffX > diffY) {\r\n            stepY = diffY / diffX * speed;\r\n        } else {\r\n            stepX = diffX / diffY * speed;\r\n        }\r\n\r\n        if (isMoving && (diffX > speed || diffY > speed)) {\r\n            if (sniperLastMouseX > x) {\r\n                sniperData.x += stepX;\r\n            } else if (sniperLastMouseX < x) {\r\n                sniperData.x -= stepX;\r\n            }\r\n\r\n            if (sniperLastMouseY > y) {\r\n                sniperData.y += stepY;\r\n            } else if (sniperLastMouseY < y) {\r\n                sniperData.y -= stepY;\r\n            }\r\n        } else {\r\n            sniperData.isMoving = false;\r\n        }\r\n\r\n        ctx.save();\r\n        ctx.translate(sniperData.x, sniperData.y);\r\n        tools.updatePosition(sniperData);\r\n\r\n        mouseMoveOffset.x && ctx.rotate(\r\n            Math.atan2(mouseMoveOffset.y - sniperData.y, mouseMoveOffset.x - sniperData.x) + Math.PI/2\r\n        );\r\n        ctx.drawImage(image, isMoving ? sniperData.position * w : 0,  0, w, h, -15, 0, w, h);\r\n        ctx.rotate(-Math.PI/2);\r\n\r\n        const lineGrd = ctx.createLinearGradient(0,0,700,0);\r\n        lineGrd.addColorStop(0,\"#8B1516\");\r\n        lineGrd.addColorStop(1,\"#252729\");\r\n        ctx.fillStyle = lineGrd;\r\n        ctx.fillRect(0,-2,1000,1);\r\n        ctx.restore();\r\n    };\r\n\r\n    Object.assign(sniperData, options);\r\n\r\n    return sniperData;\r\n};\r\n\r\nconst Step = function (options) {\r\n    this.stepData = {\r\n        x\t\t    : 0,\r\n        y\t\t    : 0,\r\n        r\t\t    : 5,\r\n        maxR\t    : 18,\r\n        speed\t    : 0.6,\r\n        style\t    : '#8B1516',\r\n        isStarted\t: false,\r\n        width\t    : 2,\r\n    };\r\n\r\n    const { stepData } = this;\r\n\r\n    stepData.draw = function(scene, cb) {\r\n        const { ctx } = scene;\r\n        const { isStarted, maxR, r, speed, style, width, x, y } = stepData;\r\n\r\n        ctx.beginPath();\r\n        ctx.strokeStyle = style;\r\n        ctx.lineWidth = width;\r\n\r\n        if (!isStarted) {\r\n            ctx.arc(x, y, r, 0, 2 * Math.PI);\r\n            stepData.isStarted = true;\r\n        } else {\r\n            ctx.arc(x, y, r, 0, 2 * Math.PI);\r\n            stepData.r += speed;\r\n            if (stepData.r > maxR) {\r\n                if (typeof cb == \"function\") cb();\r\n            }\r\n        }\r\n\r\n        ctx.closePath();\r\n        ctx.stroke();\r\n    };\r\n\r\n    Object.assign(stepData, options);\r\n\r\n    return stepData;\r\n};\r\n\r\nconst Explosion = function (options) {\r\n    this.explosionData = {\r\n        x\t\t\t: 0,\r\n        y\t\t\t: 0,\r\n        w\t\t\t: 128,\r\n        h\t\t\t: 128,\r\n        position\t: 0,\r\n        image\t\t: images.explosion,\r\n    };\r\n\r\n    const { explosionData } = this;\r\n\r\n    explosionData.draw = function(scene, cb) {\r\n        const { ctx } = scene;\r\n        const { h, image, position, w, x, y } = explosionData;\r\n\r\n        if (position !== 82) {\r\n            const p = Math.ceil(position / 2);\r\n\r\n            ctx.drawImage(image, p * w,  0, w, h, x - 64, y - 64, w, h);\r\n            explosionData.position++;\r\n        } else {\r\n            if (typeof cb == \"function\") cb();\r\n        }\r\n    };\r\n\r\n    Object.assign(explosionData, options);\r\n\r\n    return explosionData;\r\n};\r\n\r\nconst Rocket = function (options) {\r\n    this.rocketData = {\r\n        mx\t\t\t: 0,\r\n        my\t\t\t: 0,\r\n        w\t\t\t: 26,\r\n        h\t\t\t: 49,\r\n        px\t\t\t: 0,\r\n        py\t\t\t: 0,\r\n        x\t\t\t: 0,\r\n        y\t\t\t: 0,\r\n        speed\t\t: 16,\r\n        position\t: 0,\r\n        maxPosition\t: 3,\r\n        image\t\t: images.rocket,\r\n    };\r\n\r\n    const { rocketData } = this;\r\n\r\n    rocketData.checkTargets = function(scene) {\r\n        const { x, y } = rocketData;\r\n        const { monsters } = scene;\r\n        const initialLength = monsters.length;\r\n\r\n        scene.monsters = monsters.filter(mon => {\r\n            const diffX = tools.getDiff(mon.x, x);\r\n            const diffY = tools.getDiff(mon.y, y);\r\n\r\n            return !(diffX < 20 && diffY < 20);\r\n        });\r\n\r\n        const hit = initialLength !== scene.monsters.length;\r\n\r\n        if (hit) {\r\n            scene.score.score++;\r\n            if (scene.score.score === scene.settings.levelUp * scene.level.level) {\r\n                scene.level.level++;\r\n                scene.settings.monsterSpeed += 1;\r\n            }\r\n        }\r\n\r\n        return hit;\r\n    };\r\n\r\n    rocketData.draw = function(scene, cb) {\r\n        const { explosions, ctx } = scene;\r\n        const { checkTargets, h, image, speed, position, px, py, w, x, y } = rocketData;\r\n        const hasTarget = checkTargets(scene);\r\n\r\n        let stepX = speed;\r\n        let stepY = speed;\r\n\r\n        const diffX = tools.getDiff(px, x);\r\n        const diffY = tools.getDiff(py, y);\r\n\r\n        if (diffX > diffY) {\r\n            stepY = diffY / diffX * speed;\r\n        } else {\r\n            stepX = diffX / diffY * speed;\r\n        }\r\n\r\n        if (hasTarget || (diffX < speed && diffY < speed)) {\r\n            explosions.push(new Explosion({\r\n                x: x,\r\n                y: y\r\n            }));\r\n\r\n            if (typeof cb == \"function\") cb();\r\n\r\n            return;\r\n        }\r\n\r\n        if (px > x) {\r\n            rocketData.x += stepX;\r\n        } else if (px < x) {\r\n            rocketData.x -= stepX;\r\n        }\r\n\r\n        if (py > y) {\r\n            rocketData.y += stepY;\r\n        } else if (py < y) {\r\n            rocketData.y -= stepY;\r\n        }\r\n\r\n        ctx.save();\r\n        ctx.translate(rocketData.x, rocketData.y);\r\n        px && ctx.rotate(Math.atan2(py - rocketData.y, px - rocketData.x) + Math.PI/2);\r\n        tools.updatePosition(rocketData);\r\n        ctx.drawImage(image, position * w,  0, w, h, -12, -31, w, h);\r\n        ctx.restore();\r\n    };\r\n\r\n    Object.assign(rocketData, options);\r\n\r\n    return rocketData;\r\n};\r\n\r\nconst Monster = function (options) {\r\n    this.monsterData = {\r\n        w:                      42,\r\n        h:                      31,\r\n        speed:                  options.speed,\r\n        position:               0,\r\n        maxPosition:            0,\r\n        maxX:                   options.maxX,\r\n        maxY:                   options.maxY,\r\n        image:                  images.monster,\r\n        monsterAppearOptions: [\r\n            { x: 'random',  y: 0 },\r\n            { x: 'max',     y: 'random' },\r\n            { x: 'random',  y: 'max' },\r\n            { x: 0,         y: 'random' }\r\n        ],\r\n    };\r\n\r\n    const { monsterData } = this;\r\n    const sides = monsterData.monsterAppearOptions;\r\n    const randomSide = tools.getRandom(4);\r\n    const chosenOption = sides[randomSide];\r\n\r\n    Object.keys(chosenOption).forEach(key => {\r\n        const maxKeyValue = monsterData[`max${key.toUpperCase()}`];\r\n\r\n        switch (chosenOption[key]) {\r\n            case 'random':\r\n                monsterData[key] = tools.getRandom(maxKeyValue);\r\n                break;\r\n\r\n            case 'max':\r\n                monsterData[key] = maxKeyValue;\r\n                break;\r\n\r\n            default:\r\n                monsterData[key] = chosenOption[key];\r\n        }\r\n    });\r\n\r\n    monsterData.checkHit = function(scene) {\r\n        const { sniper, life } = scene;\r\n        const { speed, x, y } = monsterData;\r\n        const diffX = tools.getDiff(sniper.x, x);\r\n        const diffY = tools.getDiff(sniper.y, y);\r\n        const minDiff = speed + life.r + 20;\r\n        const hit = (diffX < minDiff && diffY < minDiff);\r\n\r\n        if (hit) {\r\n            scene.life.life -= life.speed;\r\n        }\r\n\r\n        return hit;\r\n    };\r\n\r\n    monsterData.draw = function(scene, cb) {\r\n        const { ctx, sniper } = scene;\r\n        const { checkHit, h, image, speed, position, px, py, w, x, y } = monsterData;\r\n\r\n        let stepX = speed;\r\n        let stepY = speed;\r\n\r\n        const diffX = tools.getDiff(sniper.x, x);\r\n        const diffY = tools.getDiff(sniper.y, y);\r\n\r\n        if (diffX > diffY) {\r\n            stepY = diffY / diffX * speed;\r\n        } else {\r\n            stepX = diffX / diffY * speed;\r\n        }\r\n\r\n        if (checkHit(scene)) {\r\n            if (typeof cb == \"function\") cb();\r\n\r\n            return;\r\n        }\r\n\r\n        if (sniper.x > x) {\r\n            monsterData.x += stepX;\r\n        } else if (sniper.x < x) {\r\n            monsterData.x -= stepX;\r\n        }\r\n\r\n        if (sniper.y > y) {\r\n            monsterData.y += stepY;\r\n        } else if (sniper.y < y) {\r\n            monsterData.y -= stepY;\r\n        }\r\n\r\n        ctx.save();\r\n        ctx.translate(monsterData.x, monsterData.y);\r\n        px && ctx.rotate(Math.atan2(sniper.y - monsterData.y, sniper.x - monsterData.x) + Math.PI/2);\r\n        tools.updatePosition(monsterData);\r\n        ctx.drawImage(image, position * w,  0, w, h, -12, -31, w, h);\r\n        ctx.restore();\r\n    };\r\n\r\n    Object.assign(monsterData, options);\r\n\r\n    return monsterData;\r\n};\r\n\r\nexport {\r\n    Explosion,\r\n    GameOver,\r\n    init,\r\n    Level,\r\n    Life,\r\n    Monster,\r\n    Rocket,\r\n    Score,\r\n    Sniper,\r\n    Step,\r\n}","import * as gameObjects from './gameObjects';\r\n\r\nconst Scene = function (options) {\r\n    const { drawSceneSpeed, monsterGenerateInterval, sceneName, } = options || {};\r\n\r\n    this.sceneName = sceneName || 'scene';\r\n    this.settings = {\r\n        drawSceneSpeed: drawSceneSpeed || 16.66666666,\r\n        levelUp: 30,\r\n        monsterSpeed: 1,\r\n        monsterGenerateInterval: monsterGenerateInterval || 2000,\r\n    };\r\n\r\n\r\n    gameObjects.init([\r\n        { code: \"explosion\", src:  \"images/explosion.png\"},\r\n        { code: \"monster\", src:  \"images/monster.png\"},\r\n        { code: \"rocket\", src:  \"images/rocket.png\"},\r\n        { code: \"sniper\", src:  \"images/sniper.png\"},\r\n    ]);\r\n};\r\n\r\nScene.prototype.getMonsterSpeed = function() {\r\n    return this.settings.monsterSpeed;\r\n};\r\n\r\nScene.prototype.render = function () {\r\n    const self = this;\r\n    const { ctx, explosions, level, life, monsters, mouseMoveOffset, rockets, score, sniper, steps, } = this;\r\n\r\n    ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height); // clear canvas\r\n\r\n    level.draw(self);\r\n    score.draw(self);\r\n    sniper.draw(self, mouseMoveOffset);\r\n\r\n    life.draw(self, () => {\r\n        self.destroy();\r\n    });\r\n\r\n    rockets.forEach((rock, i) => {\r\n        rock.draw(self, () => {\r\n            rockets.splice(i, 1);\r\n        });\r\n    });\r\n\r\n    steps.forEach((step, i) => {\r\n        step.draw(self, () => {\r\n            steps.splice(i, 1);\r\n        });\r\n    });\r\n\r\n    explosions.forEach((exp, i) => {\r\n        exp.draw(self, () => {\r\n            explosions.splice(i, 1);\r\n        });\r\n    });\r\n\r\n    monsters.forEach((mon, i) => {\r\n        mon.draw(self, () => {\r\n            monsters.splice(i, 1);\r\n        });\r\n    });\r\n};\r\n\r\nScene.prototype.destroy = function() {\r\n    const { ctx, drawingInterval, gameover, level, monsterInterval, settings, score } = this;\r\n    const { height, width } = ctx.canvas;\r\n\r\n    clearInterval(monsterInterval);\r\n    clearInterval(drawingInterval);\r\n\r\n    setTimeout(() => {\r\n        ctx.clearRect(0, 0, width, height);\r\n        gameover.draw(this);\r\n        level.draw(this);\r\n        score.draw(this);\r\n    }, settings.drawSceneSpeed);\r\n};\r\n\r\nScene.prototype.init = function(width, height) {\r\n    const self = this;\r\n    this.canvas = document.getElementById(this.sceneName);\r\n    this.ctx = this.canvas.getContext('2d');\r\n\r\n    this.explosions = [];\r\n    this.monsters = [];\r\n    this.rockets = [];\r\n    this.steps = [];\r\n    this.gameover = new gameObjects.GameOver();\r\n    this.level = new gameObjects.Level();\r\n    this.life = new gameObjects.Life();\r\n    this.score = new gameObjects.Score();\r\n    this.sniper = new gameObjects.Sniper();\r\n\r\n    this.mouseMoveOffset = { x: 0, y: 0};\r\n\r\n    const { canvas, mouseMoveOffset, rockets, settings, sniper, steps } = this;\r\n\r\n    this.render = this.render.bind(this);\r\n\r\n    canvas.addEventListener('mousemove', (e) => {\r\n        mouseMoveOffset.x = e.pageX - e.target.offsetLeft;\r\n        mouseMoveOffset.y =\te.pageY - e.target.offsetTop;\r\n    });\r\n\r\n    this.drawingInterval = setInterval(() => {\r\n        //draw the scene\r\n        self.render();\r\n    }, settings.drawSceneSpeed);\r\n\r\n    this.monsterInterval = setInterval(() => {\r\n        self.monsters.push(new gameObjects.Monster({\r\n            maxX:   width,\r\n            maxY:   height,\r\n            speed:  self.getMonsterSpeed(),\r\n        }));\r\n    }, settings.monsterGenerateInterval);\r\n\r\n    canvas.addEventListener('mousedown', (e) => {\r\n        const { which } = e;\r\n\r\n        let mouseX = e.offsetX || 0;\r\n        let mouseY = e.offsetY || 0;\r\n\r\n        switch (which) {\r\n            case 1: // left button\r\n\r\n                rockets.push(new gameObjects.Rocket({\r\n                    mx \t\t: mouseMoveOffset.x,\r\n                    my  \t: mouseMoveOffset.y,\r\n                    px \t\t: mouseX,\r\n                    py\t\t: mouseY,\r\n                    x\t\t: sniper.x,\r\n                    y\t\t: sniper.y\r\n                }));\r\n\r\n                break;\r\n\r\n            case 3: // right button\r\n\r\n                // saving last coordinates and move the sniper\r\n                sniper.sniperLastMouseX = mouseX;\r\n                sniper.sniperLastMouseY = mouseY;\r\n                sniper.isMoving = true;\r\n\r\n                //add a step\r\n                steps.push(new gameObjects.Step({\r\n                    x: mouseX,\r\n                    y: mouseY\r\n                }));\r\n\r\n                break;\r\n        }\r\n    });\r\n};\r\n\r\nexport default Scene;","import React, { PureComponent } from 'react';\n\nimport Scene from './core/scene';\n\nconst width = 1000;\nconst height = 600;\n\nclass App extends PureComponent {\n  componentDidMount() {\n    (new Scene()).init(width, height);\n  }\n\n  onContextMenu(e) {\n    e.preventDefault();\n    return false;\n  }\n\n  render() {\n    return (\n        <canvas id=\"scene\" width={width} height={height} onContextMenu={this.onContextMenu}></canvas>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}