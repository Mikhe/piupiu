{"version":3,"sources":["core/tools.js","core/gameObjects.js","core/scene.js","App.js","serviceWorker.js","index.js"],"names":["getDiff","x","y","Math","abs","Number","getRandom","max","floor","random","updatePosition","obj","position","maxPosition","images","GameOver","options","this","gameData","color","font","label","draw","scene","ctx","fillStyle","fillText","Object","assign","Life","lifeData","colors","baseColor","dangerColor","fullColor","middleColor","life","r","speed","width","cb","currentColor","sniper","beginPath","lineWidth","strokeStyle","arc","PI","closePath","stroke","Score","scoreData","score","text","concat","Sniper","sniperData","w","h","isMoving","sniperLastMouseX","sniperLastMouseY","image","mouseMoveOffset","stepX","stepY","diffX","tools","diffY","save","translate","rotate","atan2","drawImage","lineGrd","createLinearGradient","addColorStop","fillRect","restore","Step","stepData","maxR","style","isStarted","Explosion","explosionData","explosion","p","ceil","Rocket","rocketData","mx","my","px","py","rocket","checkTargets","monsters","initialLength","length","filter","mon","hit","explosions","hasTarget","push","Monster","monsterData","maxX","maxY","monster","monsterAppearOptions","chosenOption","keys","forEach","key","maxKeyValue","toUpperCase","checkHit","minDiff","Scene","elements","_ref","drawSceneSpeed","monsterGenerateInterval","sceneName","settings","code","src","Array","isArray","el","Image","e","console","error","prototype","render","self","rockets","steps","clearRect","canvas","height","destroy","rock","i","splice","step","exp","_this","drawingInterval","gameover","monsterInterval","_ctx$canvas","clearInterval","setTimeout","init","document","getElementById","getContext","gameObjects","bind","addEventListener","pageX","target","offsetLeft","pageY","offsetTop","setInterval","originalEvent","which","mouseX","layerX","mouseY","layerY","App","preventDefault","react_default","a","createElement","id","onContextMenu","PureComponent","Boolean","window","location","hostname","match","ReactDOM","src_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.35ce7ece.chunk.js","sourcesContent":["const getDiff = (x, y) => {\r\n    return Math.abs(Number(x) - Number(y));\r\n};\r\n\r\nconst getRandom = (max) => {\r\n    return Math.floor(Math.random() * max);\r\n};\r\n\r\nconst updatePosition = (obj) => {\r\n    obj.position = obj.position === obj.maxPosition ? 0 : ++obj.position;\r\n};\r\n\r\nexport {\r\n    getDiff,\r\n    getRandom,\r\n    updatePosition,\r\n}","import * as tools from './tools';\r\n\r\nconst images = {};\r\n\r\nconst init = function(elements) {\r\n    if (!(Array.isArray(elements))) {\r\n        elements = [elements];\r\n    }\r\n\r\n    elements.forEach(el => {\r\n        try {\r\n            images[el.code] = new Image();\r\n            images[el.code].src = el.src;\r\n        } catch(e){\r\n            console.error(\"Initialization failed!\");\r\n        }\r\n    });\r\n};\r\n\r\nconst GameOver = function (options) {\r\n    this.gameData = {\r\n        color: '#fff',\r\n        font: '45px Arial',\r\n        label: 'Game Over',\r\n        x: 385,\r\n        y: 300,\r\n    };\r\n\r\n    const { gameData } = this;\r\n\r\n    gameData.draw = function(scene) {\r\n        const { color, font, label, x, y } = gameData;\r\n        const { ctx } = scene;\r\n\r\n        ctx.fillStyle = color;\r\n        ctx.font = font;\r\n        ctx.fillText(label, x, y);\r\n    };\r\n\r\n    Object.assign(gameData, options);\r\n\r\n    return gameData;\r\n};\r\n\r\nconst Life = function (options) {\r\n    this.lifeData = {\r\n        colors: {\r\n            baseColor: '#DCDCDC',\r\n            dangerColor: '#FF0000',\r\n            fullColor: '#00FF00',\r\n            middleColor: '#FFFF00',\r\n        },\r\n        life        : 100,\r\n        r\t\t    : 65,\r\n        speed       : 10,\r\n        width\t    : 5,\r\n    };\r\n\r\n    const { lifeData } = this;\r\n\r\n    lifeData.draw = function(scene, cb) {\r\n        const { ctx, sniper } = scene;\r\n        const { x, y } = sniper;\r\n        const { life, r, colors, width, } = lifeData;\r\n        let currentColor;\r\n\r\n        if (life <= 30) {\r\n            currentColor = colors.dangerColor;\r\n        } else if (life <= 70) {\r\n            currentColor = colors.middleColor;\r\n        } else {\r\n            currentColor = colors.fullColor;\r\n        }\r\n\r\n        //base\r\n        ctx.beginPath();\r\n        ctx.lineWidth = width;\r\n        ctx.strokeStyle = currentColor;\r\n        ctx.arc(x, y, r, Math.PI/180 * -90, Math.PI/180 * 270, true);\r\n        ctx.closePath();\r\n        ctx.stroke();\r\n\r\n        //current level\r\n        ctx.beginPath();\r\n        ctx.lineWidth = width;\r\n        ctx.strokeStyle = colors.baseColor;\r\n        ctx.arc(x, y, r, Math.PI/180 * -90, Math.PI/180 * ((100 - life) * 3.6 - 90));\r\n        ctx.stroke();\r\n        ctx.closePath();\r\n\r\n        if (lifeData.life <= 0) {\r\n            if (typeof cb == \"function\") cb();\r\n        }\r\n    };\r\n\r\n    Object.assign(lifeData, options);\r\n\r\n    return lifeData;\r\n};\r\n\r\nconst Score = function (options) {\r\n    this.scoreData = {\r\n        color: '#fff',\r\n        font: '30px Arial',\r\n        label: 'Score:',\r\n        score: 0,\r\n        x: 20,\r\n        y: 30,\r\n    };\r\n\r\n    const { scoreData } = this;\r\n\r\n    scoreData.draw = function(scene) {\r\n        const { color, font, label, score, x, y } = scoreData;\r\n        const { ctx } = scene;\r\n        const text = `${label} ${score}`;\r\n\r\n        ctx.fillStyle = color;\r\n        ctx.font = font;\r\n        ctx.fillText(text, x, y);\r\n    };\r\n\r\n    Object.assign(scoreData, options);\r\n\r\n    return scoreData;\r\n};\r\n\r\nconst Sniper = function (options) {\r\n    this.sniperData = {\r\n        x\t\t\t\t\t: 400,\r\n        y\t\t\t\t\t: 300,\r\n        w\t\t\t\t\t: 53,\r\n        h\t\t\t\t\t: 63,\r\n        speed\t\t\t\t: 3,\r\n        position\t\t\t: 0,\r\n        maxPosition\t\t\t: 7,\r\n        isMoving\t\t\t: false,\r\n        sniperLastMouseX\t: 0,\r\n        sniperLastMouseY\t: 0,\r\n        image\t\t\t\t: images.sniper,\r\n    };\r\n\r\n    const { sniperData } = this;\r\n\r\n    sniperData.draw = function(scene, mouseMoveOffset) {\r\n        const { ctx } = scene;\r\n        const { h, image, isMoving, sniperLastMouseX, sniperLastMouseY, speed, w, x, y } = sniperData;\r\n\r\n        let stepX = speed;\r\n        let stepY = speed;\r\n\r\n        const diffX = tools.getDiff(sniperLastMouseX, x);\r\n        const diffY = tools.getDiff(sniperLastMouseY, y);\r\n\r\n        if (diffX > diffY) {\r\n            stepY = diffY / diffX * speed;\r\n        } else {\r\n            stepX = diffX / diffY * speed;\r\n        }\r\n\r\n        if (isMoving && (diffX > speed || diffY > speed)) {\r\n            if (sniperLastMouseX > x) {\r\n                sniperData.x += stepX;\r\n            } else if (sniperLastMouseX < x) {\r\n                sniperData.x -= stepX;\r\n            }\r\n\r\n            if (sniperLastMouseY > y) {\r\n                sniperData.y += stepY;\r\n            } else if (sniperLastMouseY < y) {\r\n                sniperData.y -= stepY;\r\n            }\r\n        } else {\r\n            sniperData.isMoving = false;\r\n        }\r\n\r\n        ctx.save();\r\n        ctx.translate(sniperData.x, sniperData.y);\r\n        tools.updatePosition(sniperData);\r\n\r\n        mouseMoveOffset.x && ctx.rotate(\r\n            Math.atan2(mouseMoveOffset.y - sniperData.y, mouseMoveOffset.x - sniperData.x) + Math.PI/2\r\n        );\r\n        ctx.drawImage(image, isMoving ? sniperData.position * w : 0,  0, w, h, -15, 0, w, h);\r\n        ctx.rotate(-Math.PI/2);\r\n\r\n        const lineGrd = ctx.createLinearGradient(0,0,700,0);\r\n        lineGrd.addColorStop(0,\"#8B1516\");\r\n        lineGrd.addColorStop(1,\"#252729\");\r\n        ctx.fillStyle = lineGrd;\r\n        ctx.fillRect(0,-2,1000,1);\r\n        ctx.restore();\r\n    };\r\n\r\n    Object.assign(sniperData, options);\r\n\r\n    return sniperData;\r\n};\r\n\r\nconst Step = function (options) {\r\n    this.stepData = {\r\n        x\t\t    : 0,\r\n        y\t\t    : 0,\r\n        r\t\t    : 5,\r\n        maxR\t    : 18,\r\n        speed\t    : 0.6,\r\n        style\t    : '#8B1516',\r\n        isStarted\t: false,\r\n        width\t    : 2,\r\n    };\r\n\r\n    const { stepData } = this;\r\n\r\n    stepData.draw = function(scene, cb) {\r\n        const { ctx } = scene;\r\n        const { isStarted, maxR, r, speed, style, width, x, y } = stepData;\r\n\r\n        ctx.beginPath();\r\n        ctx.strokeStyle = style;\r\n        ctx.lineWidth = width;\r\n\r\n        if (!isStarted) {\r\n            ctx.arc(x, y, r, 0, 2 * Math.PI);\r\n            stepData.isStarted = true;\r\n        } else {\r\n            ctx.arc(x, y, r, 0, 2 * Math.PI);\r\n            stepData.r += speed;\r\n            if (stepData.r > maxR) {\r\n                if (typeof cb == \"function\") cb();\r\n            }\r\n        }\r\n\r\n        ctx.closePath();\r\n        ctx.stroke();\r\n    };\r\n\r\n    Object.assign(stepData, options);\r\n\r\n    return stepData;\r\n};\r\n\r\nconst Explosion = function (options) {\r\n    this.explosionData = {\r\n        x\t\t\t: 0,\r\n        y\t\t\t: 0,\r\n        w\t\t\t: 128,\r\n        h\t\t\t: 128,\r\n        position\t: 0,\r\n        image\t\t: images.explosion,\r\n    };\r\n\r\n    const { explosionData } = this;\r\n\r\n    explosionData.draw = function(scene, cb) {\r\n        const { ctx } = scene;\r\n        const { h, image, position, w, x, y } = explosionData;\r\n\r\n        if (position !== 82) {\r\n            const p = Math.ceil(position / 2);\r\n\r\n            ctx.drawImage(image, p * w,  0, w, h, x - 64, y - 64, w, h);\r\n            explosionData.position++;\r\n        } else {\r\n            if (typeof cb == \"function\") cb();\r\n        }\r\n    };\r\n\r\n    Object.assign(explosionData, options);\r\n\r\n    return explosionData;\r\n};\r\n\r\nconst Rocket = function (options) {\r\n    this.rocketData = {\r\n        mx\t\t\t: 0,\r\n        my\t\t\t: 0,\r\n        w\t\t\t: 26,\r\n        h\t\t\t: 49,\r\n        px\t\t\t: 0,\r\n        py\t\t\t: 0,\r\n        x\t\t\t: 0,\r\n        y\t\t\t: 0,\r\n        speed\t\t: 16,\r\n        position\t: 0,\r\n        maxPosition\t: 3,\r\n        image\t\t: images.rocket,\r\n    };\r\n\r\n    const { rocketData } = this;\r\n\r\n    rocketData.checkTargets = function(scene) {\r\n        const { x, y } = rocketData;\r\n        const { monsters } = scene;\r\n        const initialLength = monsters.length;\r\n\r\n        scene.monsters = monsters.filter(mon => {\r\n            const diffX = tools.getDiff(mon.x, x);\r\n            const diffY = tools.getDiff(mon.y, y);\r\n\r\n            return !(diffX < 20 && diffY < 20);\r\n        });\r\n\r\n        const hit = initialLength !== scene.monsters.length;\r\n\r\n        if (hit) {\r\n            scene.score.score++;\r\n        }\r\n\r\n        return hit;\r\n    };\r\n\r\n    rocketData.draw = function(scene, cb) {\r\n        const { explosions, ctx } = scene;\r\n        const { checkTargets, h, image, speed, position, px, py, w, x, y } = rocketData;\r\n        const hasTarget = checkTargets(scene);\r\n\r\n        let stepX = speed;\r\n        let stepY = speed;\r\n\r\n        const diffX = tools.getDiff(px, x);\r\n        const diffY = tools.getDiff(py, y);\r\n\r\n        if (diffX > diffY) {\r\n            stepY = diffY / diffX * speed;\r\n        } else {\r\n            stepX = diffX / diffY * speed;\r\n        }\r\n\r\n        if (hasTarget || (diffX < speed && diffY < speed)) {\r\n            explosions.push(new Explosion({\r\n                x: x,\r\n                y: y\r\n            }));\r\n\r\n            if (typeof cb == \"function\") cb();\r\n\r\n            return;\r\n        }\r\n\r\n        if (px > x) {\r\n            rocketData.x += stepX;\r\n        } else if (px < x) {\r\n            rocketData.x -= stepX;\r\n        }\r\n\r\n        if (py > y) {\r\n            rocketData.y += stepY;\r\n        } else if (py < y) {\r\n            rocketData.y -= stepY;\r\n        }\r\n\r\n        ctx.save();\r\n        ctx.translate(rocketData.x, rocketData.y);\r\n        px && ctx.rotate(Math.atan2(py - rocketData.y, px - rocketData.x) + Math.PI/2);\r\n        tools.updatePosition(rocketData);\r\n        ctx.drawImage(image, position * w,  0, w, h, -12, -31, w, h);\r\n        ctx.restore();\r\n    };\r\n\r\n    Object.assign(rocketData, options);\r\n\r\n    return rocketData;\r\n};\r\n\r\nconst Monster = function (options) {\r\n    this.monsterData = {\r\n        mx:                     0,\r\n        my:                     0,\r\n        w:                      42,\r\n        h:                      31,\r\n        px:                     0,\r\n        py:                     0,\r\n        speed:                  1,\r\n        position:               0,\r\n        maxPosition:            0,\r\n        maxX:                   options.maxX,\r\n        maxY:                   options.maxY,\r\n        image:                  images.monster,\r\n        monsterAppearOptions: [\r\n            { x: 'random',  y: 0 },\r\n            { x: 'max',     y: 'random' },\r\n            { x: 'random',  y: 'max' },\r\n            { x: 0,         y: 'random' }\r\n        ],\r\n    };\r\n\r\n    const { monsterData } = this;\r\n    const sides = monsterData.monsterAppearOptions;\r\n    const randomSide = tools.getRandom(4);\r\n    const chosenOption = sides[randomSide];\r\n\r\n    Object.keys(chosenOption).forEach(key => {\r\n        const maxKeyValue = monsterData[`max${key.toUpperCase()}`];\r\n\r\n        switch (chosenOption[key]) {\r\n            case 'random':\r\n                monsterData[key] = tools.getRandom(maxKeyValue);\r\n                break;\r\n\r\n            case 'max':\r\n                monsterData[key] = maxKeyValue;\r\n                break;\r\n\r\n            default:\r\n                monsterData[key] = chosenOption[key];\r\n        }\r\n    });\r\n\r\n    monsterData.checkHit = function(scene) {\r\n        const { sniper, life } = scene;\r\n        const { speed, x, y } = monsterData;\r\n        const diffX = tools.getDiff(sniper.x, x);\r\n        const diffY = tools.getDiff(sniper.y, y);\r\n        const minDiff = speed + life.r + 20;\r\n        const hit = (diffX < minDiff && diffY < minDiff);\r\n\r\n        if (hit) {\r\n            scene.life.life -= life.speed;\r\n        }\r\n\r\n        return hit;\r\n    };\r\n\r\n    monsterData.draw = function(scene, cb) {\r\n        const { ctx } = scene;\r\n        const { checkHit, h, image, speed, position, px, py, w, x, y } = monsterData;\r\n\r\n        let stepX = speed;\r\n        let stepY = speed;\r\n\r\n        const diffX = tools.getDiff(px, x);\r\n        const diffY = tools.getDiff(py, y);\r\n\r\n        if (diffX > diffY) {\r\n            stepY = diffY / diffX * speed;\r\n        } else {\r\n            stepX = diffX / diffY * speed;\r\n        }\r\n\r\n        if (checkHit(scene)) {\r\n            if (typeof cb == \"function\") cb();\r\n\r\n            return;\r\n        }\r\n\r\n        if (px > x) {\r\n            monsterData.x += stepX;\r\n        } else if (px < x) {\r\n            monsterData.x -= stepX;\r\n        }\r\n\r\n        if (py > y) {\r\n            monsterData.y += stepY;\r\n        } else if (py < y) {\r\n            monsterData.y -= stepY;\r\n        }\r\n\r\n        ctx.save();\r\n        ctx.translate(monsterData.x, monsterData.y);\r\n        px && ctx.rotate(Math.atan2(py - monsterData.y, px - monsterData.x) + Math.PI/2);\r\n        tools.updatePosition(monsterData);\r\n        ctx.drawImage(image, position * w,  0, w, h, -12, -31, w, h);\r\n        ctx.restore();\r\n    };\r\n\r\n    Object.assign(monsterData, options);\r\n\r\n    return monsterData;\r\n};\r\n\r\nexport {\r\n    Explosion,\r\n    GameOver,\r\n    init,\r\n    Life,\r\n    Monster,\r\n    Rocket,\r\n    Score,\r\n    Sniper,\r\n    Step,\r\n}","import * as gameObjects from './gameObjects';\r\n\r\nconst Scene = function (options) {\r\n    const { drawSceneSpeed, monsterGenerateInterval, sceneName, } = options || {};\r\n\r\n    this.sceneName = sceneName || 'scene';\r\n    this.settings = {\r\n        drawSceneSpeed: drawSceneSpeed || 16.66666666,\r\n        monsterGenerateInterval: monsterGenerateInterval || 2000,\r\n    };\r\n\r\n\r\n    gameObjects.init([\r\n        { code: \"explosion\", src:  \"images/explosion.png\"},\r\n        { code: \"monster\", src:  \"images/monster.png\"},\r\n        { code: \"rocket\", src:  \"images/rocket.png\"},\r\n        { code: \"sniper\", src:  \"images/sniper.png\"},\r\n    ]);\r\n};\r\n\r\nScene.prototype.render = function () {\r\n    const self = this;\r\n    const { ctx, explosions, life, monsters, mouseMoveOffset, rockets, score, sniper, steps, } = this;\r\n\r\n    ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height); // clear canvas\r\n\r\n    score.draw(self);\r\n    sniper.draw(self, mouseMoveOffset);\r\n    life.draw(self, () => {\r\n        self.destroy();\r\n    });\r\n\r\n    rockets.forEach((rock, i) => {\r\n        rock.draw(self, () => {\r\n            rockets.splice(i, 1);\r\n        });\r\n    });\r\n\r\n    steps.forEach((step, i) => {\r\n        step.draw(self, () => {\r\n            steps.splice(i, 1);\r\n        });\r\n    });\r\n\r\n    explosions.forEach((exp, i) => {\r\n        exp.draw(self, () => {\r\n            explosions.splice(i, 1);\r\n        });\r\n    });\r\n\r\n    monsters.forEach((mon, i) => {\r\n        mon.draw(self, () => {\r\n            monsters.splice(i, 1);\r\n        });\r\n    });\r\n};\r\n\r\nScene.prototype.destroy = function() {\r\n    const { ctx, drawingInterval, gameover, monsterInterval, settings, score } = this;\r\n    const { height, width } = ctx.canvas;\r\n\r\n    clearInterval(monsterInterval);\r\n    clearInterval(drawingInterval);\r\n\r\n    setTimeout(() => {\r\n        ctx.clearRect(0, 0, width, height);\r\n        score.draw(this);\r\n        gameover.draw(this);\r\n    }, settings.drawSceneSpeed);\r\n};\r\n\r\nScene.prototype.init = function(width, height) {\r\n    const self = this;\r\n    this.canvas = document.getElementById(this.sceneName);\r\n    this.ctx = this.canvas.getContext('2d');\r\n\r\n    this.explosions = [];\r\n    this.monsters = [];\r\n    this.rockets = [];\r\n    this.steps = [];\r\n    this.gameover = new gameObjects.GameOver();\r\n    this.life = new gameObjects.Life();\r\n    this.score = new gameObjects.Score();\r\n    this.sniper = new gameObjects.Sniper();\r\n\r\n    this.mouseMoveOffset = { x: 0, y: 0};\r\n\r\n    const { canvas, mouseMoveOffset, rockets, settings, sniper, steps } = this;\r\n\r\n    this.render = this.render.bind(this);\r\n\r\n    canvas.addEventListener('mousemove', (e) => {\r\n        mouseMoveOffset.x = e.pageX - e.target.offsetLeft;\r\n        mouseMoveOffset.y =\te.pageY - e.target.offsetTop;\r\n    });\r\n\r\n    this.drawingInterval = setInterval(() => {\r\n\r\n        //draw the scene\r\n        self.render();\r\n    }, settings.drawSceneSpeed);\r\n\r\n    this.monsterInterval = setInterval(() => {\r\n        self.monsters.push(new gameObjects.Monster({\r\n            px:     sniper.x,\r\n            py:     sniper.y,\r\n            mx:     mouseMoveOffset.x,\r\n            my:     mouseMoveOffset.y,\r\n            maxX:   width,\r\n            maxY:   height,\r\n        }));\r\n    }, settings.monsterGenerateInterval);\r\n\r\n    canvas.addEventListener('mousedown', (e) => {\r\n        const { originalEvent, which } = e;\r\n\r\n        let mouseX = e.layerX || 0;\r\n        let mouseY = e.layerY || 0;\r\n\r\n        if (originalEvent && originalEvent.layerX) {\r\n            mouseX = originalEvent.layerX;\r\n            mouseY = originalEvent.layerY;\r\n        }\r\n\r\n        switch (which) {\r\n            case 1: // left button\r\n\r\n                rockets.push(new gameObjects.Rocket({\r\n                    mx \t\t: mouseMoveOffset.x,\r\n                    my  \t: mouseMoveOffset.y,\r\n                    px \t\t: mouseX,\r\n                    py\t\t: mouseY,\r\n                    x\t\t: sniper.x,\r\n                    y\t\t: sniper.y\r\n                }));\r\n\r\n                break;\r\n\r\n            case 3: // right button\r\n\r\n                // saving last coordinates and move the sniper\r\n                sniper.sniperLastMouseX = mouseX;\r\n                sniper.sniperLastMouseY = mouseY;\r\n                sniper.isMoving = true;\r\n\r\n                //add a step\r\n                steps.push(new gameObjects.Step({\r\n                    x: mouseX,\r\n                    y: mouseY\r\n                }));\r\n\r\n                break;\r\n        }\r\n    });\r\n};\r\n\r\nexport default Scene;","import React, { PureComponent } from 'react';\n\nimport Scene from './core/scene';\n\nconst width = 1000;\nconst height = 600;\n\nclass App extends PureComponent {\n  componentDidMount() {\n    (new Scene()).init(width, height);\n  }\n\n  onContextMenu(e) {\n    e.preventDefault();\n    return false;\n  }\n\n  render() {\n    return (\n        <canvas id=\"scene\" width={width} height={height} onContextMenu={this.onContextMenu}></canvas>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}